---
import { getCollection } from "astro:content"
import PostCard from "@/components/blog/PostCard.astro"
import BaseLayout from "@/layouts/BaseLayout.astro"
import SectionWrapper from "@/layouts/SectionWrapper.astro"
import BlogHeader from "@/components/blog/BlogHeader.astro"
import { capitalizer } from "@/lib/utils"

export async function getStaticPaths() {
  const allPosts = await getCollection("posts", ({ data }) => !data.isDraft)
  const uniqueCategories = [
    ...new Set(allPosts.map((post) => post.data.category).flat()),
  ]

  return uniqueCategories.map((category) => {
    const filteredPosts = allPosts
      .filter((post) => post.data.category.includes(category))
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    return {
      params: { category },
      props: { posts: filteredPosts },
    }
  })
}

const { category } = Astro.params
const { posts } = Astro.props
---

<BaseLayout
  title={`${capitalizer(category)} | Blog`}
  description={`All posts for ${category} category`}
>
  <SectionWrapper>
    <section
      aria-label="Welcome, world"
      class="flex flex-col items-center"
    >
      <BlogHeader title={`Posts by ${category} category`} />
      <div
        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-9 md:gap-y-11 lg:gap-y-16 lg:gap-x-8 pt-4 lg:pt-10"
      >
        {posts.map((post) => <PostCard {...post} />)}
      </div>
    </section>
  </SectionWrapper>
</BaseLayout>
